# Задача
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод:               Вывод:
# 7                   3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1      (каждое число вводится с новой строки)

# lst = [3, 1, 3, 4, 2, 4, 12] # список 1
# lst2 = [4, 15, 43, 1, 15, 1] #список 2
# res = [] # список куда будем записывать результат
# for el in lst: # обходим первый список
#     if el not in lst2: # если элемента первого списка нет во втором списке
#         res.append(el) # то добавляем элемент в новый список
# print(res)
# ##########
# # list comprehension
# print([el for el in lst if el not in lst2])
############
#  lst = list(map(int(input("введите элементы через пробел")юsplit())))

#################################################################
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод:               Ввод:
# 5                   5
# 1 2 3 4 5           1 5 1 5 1
# Вывод:              Вывод:
# 0                   2
# (каждое число вводится с новой строки)

# lst = [1, 5, 1, 5, 1, 5]
# count = 0
# for i in range(len(lst)-1):
#     if lst[i] > lst[i-1] and lst[i] > lst[i+1]:
#         count += 1
# print(count)
#################################################################
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:                   Вывод:
# 1 2 3 2 3               2

# lst = [1, 2, 3, 2, 3]
# myset = set(lst) # делае из списка множество
# res = []
# for i in myset:
#     res.append(lst.count(i) // 2)  # в рес добавляем количество вхождений i и делим это количество попалам 
# print(sum(res)) # суммируем результат вхождений

#################################################################
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
#  Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод:                  Вывод:
# 300                    220 284

# def getsumm(n):
#     mysumm = 1
#     for el in range(2, n):
#         if n % el == 0:
#             mysumm += el
#     return mysumm

# def getfriendlies(k):
#     lst = []
#     for n in range(1, k+1):
#         if n not in lst:
#             m = getsumm(n)
#             if n == getsumm(m) and n != m:
#                 lst.append(n)
#                 lst.append(m)
#     return lst
                
# print(getfriendlies(1000))